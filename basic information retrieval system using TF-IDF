from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
documents = [
    "TF-IDF is a technique for analyzing textual data.",
    "It is widely used in information retrieval and text mining.",
    "The TF-IDF score is based on the frequency of a term in a document and its inverse frequency across multiple documents."
]
query = "TF-IDF is used for document ranking."
tfidf_vectorizer = TfidfVectorizer()
tfidf_matrix = tfidf_vectorizer.fit_transform(documents + [query])
cosine_similarities = cosine_similarity(tfidf_matrix[-1], tfidf_matrix[:-1])
document_rankings = [(similarity, document) for similarity, document in zip(cosine_similarities[0], documents)]
document_rankings.sort(reverse=True)
for rank, (similarity, document) in enumerate(document_rankings, start=1):
    print(f"Rank {rank}: Similarity = {similarity:.4f}, Document = {document}")
